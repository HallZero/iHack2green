{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport { Container } from \"./styles\";\nimport { useEffect, useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function Scanner() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    hasPermission = _useState2[0],\n    setHasPermission = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    scanned = _useState4[0],\n    setScanned = _useState4[1];\n  useEffect(function () {\n    var getBarCodeScannerPermissions = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var _yield$BarCodeScanner = yield BarCodeScanner.requestPermissionsAsync(),\n          status = _yield$BarCodeScanner.status;\n        setHasPermission(status === \"granted\");\n      });\n      return function getBarCodeScannerPermissions() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    getBarCodeScannerPermissions();\n  }, []);\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref2) {\n    var type = _ref2.type,\n      data = _ref2.data;\n    setScanned(true);\n    alert(\"Bar code with type \" + type + \" and data \" + data + \" has been scanned!\");\n  };\n  if (hasPermission === null) {\n    return _jsx(Text, {\n      children: \"Requesting for camera permission\"\n    });\n  }\n  if (hasPermission === false) {\n    return _jsx(Text, {\n      children: \"No access to camera\"\n    });\n  }\n  return _jsx(Container, {\n    children: _jsx(BarCodeScanner, {\n      onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n      style: StyleSheet.absoluteFillObject,\n      children: _jsx(Text, {\n        children: \"Hello world\"\n      })\n    })\n  });\n}","map":{"version":3,"names":["BarCodeScanner","Container","useEffect","useState","jsx","_jsx","Scanner","_useState","_useState2","_slicedToArray","hasPermission","setHasPermission","_useState3","_useState4","scanned","setScanned","getBarCodeScannerPermissions","_ref","_asyncToGenerator","_yield$BarCodeScanner","requestPermissionsAsync","status","apply","arguments","handleBarCodeScanned","_ref2","type","data","alert","Text","children","onBarCodeScanned","undefined","style","StyleSheet","absoluteFillObject"],"sources":["C:/Users/Inteli/Documents/layer-zero/src/screens/Scanner/index.tsx"],"sourcesContent":["import { Button, StyleSheet, Text } from \"react-native\";\r\n\r\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\r\n\r\nimport { Container } from \"./styles\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport function Scanner() {\r\n  const [hasPermission, setHasPermission] = useState<boolean | null>(null);\r\n  const [scanned, setScanned] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getBarCodeScannerPermissions = async () => {\r\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\r\n      setHasPermission(status === \"granted\");\r\n    };\r\n\r\n    getBarCodeScannerPermissions();\r\n  }, []);\r\n\r\n  const handleBarCodeScanned = ({ type, data }: any) => {\r\n    setScanned(true);\r\n    alert(`Bar code with type ${type} and data ${data} has been scanned!`);\r\n  };\r\n\r\n  if (hasPermission === null) {\r\n    return <Text>Requesting for camera permission</Text>;\r\n  }\r\n  if (hasPermission === false) {\r\n    return <Text>No access to camera</Text>;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <BarCodeScanner\r\n        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n        style={StyleSheet.absoluteFillObject}\r\n      >\r\n        <Text>Hello world</Text>\r\n      </BarCodeScanner>\r\n  \r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":";;;;AAEA,SAASA,cAAc,QAAQ,sBAAsB;AAErD,SAASC,SAAS;AAClB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE5C,OAAO,SAASC,OAAOA,CAAA,EAAG;EACxB,IAAAC,SAAA,GAA0CJ,QAAQ,CAAiB,IAAI,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjEG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EACtC,IAAAI,UAAA,GAA8BT,QAAQ,CAAC,KAAK,CAAC;IAAAU,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAtCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAE1BX,SAAS,CAAC,YAAM;IACd,IAAMc,4BAA4B;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QAC/C,IAAAC,qBAAA,SAAyBnB,cAAc,CAACoB,uBAAuB,CAAC,CAAC;UAAzDC,MAAM,GAAAF,qBAAA,CAANE,MAAM;QACdV,gBAAgB,CAACU,MAAM,KAAK,SAAS,CAAC;MACxC,CAAC;MAAA,gBAHKL,4BAA4BA,CAAA;QAAA,OAAAC,IAAA,CAAAK,KAAA,OAAAC,SAAA;MAAA;IAAA,GAGjC;IAEDP,4BAA4B,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMQ,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAAC,KAAA,EAA4B;IAAA,IAAtBC,IAAI,GAAAD,KAAA,CAAJC,IAAI;MAAEC,IAAI,GAAAF,KAAA,CAAJE,IAAI;IACxCZ,UAAU,CAAC,IAAI,CAAC;IAChBa,KAAK,yBAAuBF,IAAI,kBAAaC,IAAI,uBAAoB,CAAC;EACxE,CAAC;EAED,IAAIjB,aAAa,KAAK,IAAI,EAAE;IAC1B,OAAOL,IAAA,CAACwB,IAAI;MAAAC,QAAA,EAAC;IAAgC,CAAM,CAAC;EACtD;EACA,IAAIpB,aAAa,KAAK,KAAK,EAAE;IAC3B,OAAOL,IAAA,CAACwB,IAAI;MAAAC,QAAA,EAAC;IAAmB,CAAM,CAAC;EACzC;EAEA,OACEzB,IAAA,CAACJ,SAAS;IAAA6B,QAAA,EACRzB,IAAA,CAACL,cAAc;MACb+B,gBAAgB,EAAEjB,OAAO,GAAGkB,SAAS,GAAGR,oBAAqB;MAC7DS,KAAK,EAAEC,UAAU,CAACC,kBAAmB;MAAAL,QAAA,EAErCzB,IAAA,CAACwB,IAAI;QAAAC,QAAA,EAAC;MAAW,CAAM;IAAC,CACV;EAAC,CAER,CAAC;AAEhB"},"metadata":{},"sourceType":"module","externalDependencies":[]}