{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { useEffect } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport * as LocalAuthentication from \"expo-local-authentication\";\nimport { BlueBold, Bottom, Button, ButtonText, Container, Header, Subtitle, Title } from \"./styles\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function Login() {\n  var route = useRoute();\n  var navigation = useNavigation();\n  function localAuthenticationCanBeUsed() {\n    return _localAuthenticationCanBeUsed.apply(this, arguments);\n  }\n  function _localAuthenticationCanBeUsed() {\n    _localAuthenticationCanBeUsed = _asyncToGenerator(function* () {\n      var compatible = yield LocalAuthentication.hasHardwareAsync();\n      var types = yield LocalAuthentication.supportedAuthenticationTypesAsync();\n      if (!compatible) {\n        return Alert.alert(\"Login\", \"This device doesn't support login with biometry. Types: \" + types);\n      }\n    });\n    return _localAuthenticationCanBeUsed.apply(this, arguments);\n  }\n  function handleAuthentication() {\n    return _handleAuthentication.apply(this, arguments);\n  }\n  function _handleAuthentication() {\n    _handleAuthentication = _asyncToGenerator(function* () {\n      var isBiometricEnrolled = yield LocalAuthentication.isEnrolledAsync();\n      if (!isBiometricEnrolled) {\n        return Alert.alert(\"Login\", \"Couldnt find a biometry on this device.\");\n      }\n      var auth = yield LocalAuthentication.authenticateAsync({\n        promptMessage: \"Authentication with biometry\"\n      });\n      if (auth.success) {\n        navigation.navigate(\"Home\", {\n          token: \"\"\n        });\n      }\n    });\n    return _handleAuthentication.apply(this, arguments);\n  }\n  useEffect(function () {\n    localAuthenticationCanBeUsed();\n  }, []);\n  return _jsx(SafeAreaView, {\n    edges: [\"bottom\"],\n    children: _jsxs(Container, {\n      children: [_jsxs(Header, {\n        children: [_jsxs(Title, {\n          style: {\n            fontFamily: \"Roboto_300Light\"\n          },\n          children: [\"Instant\", \"\\n\", \"Payment\", \"\\n\", \"Anywhere\", \"\\n\", \"In The World!\"]\n        }), _jsxs(Subtitle, {\n          style: {\n            fontFamily: \"Roboto_300Light\"\n          },\n          children: [\"Send money to \", _jsx(BlueBold, {\n            children: \"anywhere\"\n          }), \" in the world\", \" \", _jsx(BlueBold, {\n            children: \"cheap\"\n          }), \" and \", _jsx(BlueBold, {\n            children: \"easy\"\n          }), \".\"]\n        })]\n      }), _jsxs(Bottom, {\n        children: [_jsx(Button, {\n          onPress: handleAuthentication,\n          children: _jsx(ButtonText, {\n            children: \"LOG IN\"\n          })\n        }), _jsx(Button, {\n          children: _jsx(ButtonText, {\n            children: \"OPEN AN ACCOUNT\"\n          })\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["useEffect","Alert","useNavigation","useRoute","SafeAreaView","LocalAuthentication","BlueBold","Bottom","Button","ButtonText","Container","Header","Subtitle","Title","jsxs","_jsxs","jsx","_jsx","Login","route","navigation","localAuthenticationCanBeUsed","_localAuthenticationCanBeUsed","apply","arguments","_asyncToGenerator","compatible","hasHardwareAsync","types","supportedAuthenticationTypesAsync","alert","handleAuthentication","_handleAuthentication","isBiometricEnrolled","isEnrolledAsync","auth","authenticateAsync","promptMessage","success","navigate","token","edges","children","style","fontFamily","onPress"],"sources":["C:/Users/Inteli/Documents/layer-zero/src/screens/Login/index.tsx"],"sourcesContent":["import { useEffect } from \"react\";\r\n\r\nimport { Alert } from \"react-native\";\r\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\n\r\nimport * as LocalAuthentication from \"expo-local-authentication\";\r\n\r\nimport {\r\n  BlueBold,\r\n  Bottom,\r\n  Button,\r\n  ButtonText,\r\n  Container,\r\n  Header,\r\n  Subtitle,\r\n  Title,\r\n} from \"./styles\";\r\n\r\nexport function Login() {\r\n  const route = useRoute();\r\n  const navigation = useNavigation();\r\n\r\n  async function localAuthenticationCanBeUsed() {\r\n    const compatible = await LocalAuthentication.hasHardwareAsync();\r\n    const types = await LocalAuthentication.supportedAuthenticationTypesAsync();\r\n\r\n    if (!compatible) {\r\n      return Alert.alert(\r\n        \"Login\",\r\n        `This device doesn't support login with biometry. Types: ${types}`\r\n      );\r\n    }\r\n  }\r\n\r\n  async function handleAuthentication() {\r\n    const isBiometricEnrolled = await LocalAuthentication.isEnrolledAsync();\r\n\r\n    if (!isBiometricEnrolled) {\r\n      return Alert.alert(\"Login\", \"Couldnt find a biometry on this device.\");\r\n    }\r\n\r\n    const auth = await LocalAuthentication.authenticateAsync({\r\n      promptMessage: \"Authentication with biometry\",\r\n    });\r\n\r\n    if (auth.success) {\r\n      navigation.navigate(\"Home\" as never, { token: \"\" } as never);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    localAuthenticationCanBeUsed();\r\n  }, []);\r\n\r\n  return (\r\n    <SafeAreaView edges={[\"bottom\"]}>\r\n      <Container>\r\n        <Header>\r\n          <Title style={{ fontFamily: \"Roboto_300Light\" }}>\r\n            Instant{\"\\n\"}Payment{\"\\n\"}Anywhere{\"\\n\"}In The World!\r\n          </Title>\r\n\r\n          <Subtitle style={{ fontFamily: \"Roboto_300Light\" }}>\r\n            Send money to <BlueBold>anywhere</BlueBold> in the world{\" \"}\r\n            <BlueBold>cheap</BlueBold> and <BlueBold>easy</BlueBold>.\r\n          </Subtitle>\r\n        </Header>\r\n\r\n        <Bottom>\r\n          <Button onPress={handleAuthentication}>\r\n            <ButtonText>LOG IN</ButtonText>\r\n          </Button>\r\n          <Button>\r\n            <ButtonText>OPEN AN ACCOUNT</ButtonText>\r\n          </Button>\r\n        </Bottom>\r\n      </Container>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}